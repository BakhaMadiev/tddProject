<project xmlns="https://maven.apache.org/POM/4.0.0" xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.example</groupId>
  <artifactId>inventory</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Library Inventory Management</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
  	<maven.compiler.target>1.8</maven.compiler.target>
  	<junit.version>4.12</junit.version>
  	<assertj.version>3.27.3</assertj.version>
  	<mockito.version>4.11.0</mockito.version>
  	
	  <sonar.issue.ignore.multicriteria>e11,e12</sonar.issue.ignore.multicriteria>
	  <sonar.issue.ignore.multicriteria.e11.ruleKey>java:S110</sonar.issue.ignore.multicriteria.e11.ruleKey>
	  <sonar.issue.ignore.multicriteria.e11.resourceKey>**/*.java</sonar.issue.ignore.multicriteria.e11.resourceKey>
	  <sonar.issue.ignore.multicriteria.e12.ruleKey>java:S117</sonar.issue.ignore.multicriteria.e12.ruleKey>
	  <sonar.issue.ignore.multicriteria.e12.resourceKey>**/LibrarySwingView.java</sonar.issue.ignore.multicriteria.e12.resourceKey>
  </properties>

	<dependencies>
  	<dependency>
  		<groupId>junit</groupId>
  		<artifactId>junit</artifactId>
  		<version>${junit.version}</version>
  		<scope>test</scope>
  	</dependency>
  	
  	<dependency>
  		<groupId>org.assertj</groupId>
  		<artifactId>assertj-core</artifactId>
  		<version>${assertj.version}</version>
  		<scope>test</scope>
  	</dependency>
  	
  	<dependency>
  		<groupId>org.mockito</groupId>
  		<artifactId>mockito-core</artifactId>
  		<version>${mockito.version}</version>
  		<scope>test</scope>
  	</dependency>
  	
  	<dependency>
  		<groupId>org.mongodb</groupId>
  		<artifactId>mongo-java-driver</artifactId>
  		<version>3.12.7</version>
  	</dependency>
  	
  	<dependency>
  		<groupId>ch.qos.logback</groupId>
	  	<artifactId>logback-classic</artifactId>
	  	<version>1.2.3</version>
  	</dependency>
  	
  	<dependency>
  		<groupId>org.testcontainers</groupId>
  		<artifactId>testcontainers</artifactId>
  		<version>1.21.0</version>
  		<scope>test</scope>
  	</dependency>
  	
  	<dependency>
		<groupId>org.testcontainers</groupId>
		<artifactId>mongodb</artifactId>
		<version>1.21.0</version>
  	</dependency>
  	
  	<dependency>
  		<groupId>org.assertj</groupId>
  		<artifactId>assertj-swing-junit</artifactId>
  		<version>3.17.1</version>
  		<scope>test</scope>
  	</dependency>
  	
  	<dependency>
  		<groupId>de.bwaldvogel</groupId>
  		<artifactId>mongo-java-server</artifactId>
  		<version>1.39.0</version>
  	</dependency>
  	
  	<dependency>
  		<groupId>info.picocli</groupId>
  		<artifactId>picocli</artifactId>
  		<version>4.7.7</version>
  	</dependency>
  	
  	<dependency>
		<groupId>org.awaitility</groupId>
		<artifactId>awaitility</artifactId>
		<version>4.2.0</version>
		<scope>test</scope>
  	</dependency>
  	
  	<dependency>
  		<groupId>io.cucumber</groupId>
  		<artifactId>cucumber-java</artifactId>
  		<version>5.5.0</version>
  		<scope>test</scope>
  	</dependency>
  	
  	<dependency>
  		<groupId>io.cucumber</groupId>
  		<artifactId>cucumber-junit</artifactId>
  		<version>5.5.0</version>
  		<scope>test</scope>
  	</dependency>
  	
  </dependencies>
  
  <build>
  	<plugins>
  		<plugin>
  			<groupId>org.pitest</groupId>
  			<artifactId>pitest-maven</artifactId>
  			<version>1.5.2</version>
  			<configuration>
  				<targetClasses>
  					<param>com.example.inventory.*</param>
  				</targetClasses>
  				<targetTests>
  					<param>com.example.inventory.*Test</param>
  				</targetTests>
  				<excludedClasses>
  					<param>com.example.inventory.model.*</param>
				</excludedClasses>
  				<mutators>
  					<mutator>STRONGER</mutator>
  				</mutators>
  			</configuration>
  		</plugin>
  		
  		<!--JaCoCo configuration-->
  		<plugin>
  			<groupId>org.jacoco</groupId>
  			<artifactId>jacoco-maven-plugin</artifactId>
  			<version>0.8.5</version>
  			<executions>
  				<execution>
  					<id>prepare-agent</id>
  					<goals>
  						<goal>prepare-agent</goal>
  					</goals>
  				</execution>
  				<execution>
  					<id>report</id>
  					<phase>verify</phase>
  					<goals>
  						<goal>report</goal>
  					</goals>
	  				<configuration>
	  					<excludes>
	  						<exclude>**/MainApp.*</exclude>
	  						<exclude>**/Book.*</exclude>
	  						<exclude>**/Author.*</exclude>
	  					</excludes>
	  				</configuration>
  				</execution>
  			</executions>
  		</plugin>
  		
  		<plugin>
  			<groupId>org.apache.maven.plugins</groupId>
  			<artifactId>maven-assembly-plugin</artifactId>
  			<executions>
  				<execution>
  					<phase>package</phase>
  					<goals>
  						<goal>single</goal>
  					</goals>
  					<configuration>
  						<descriptorRefs>
  							<descriptorRef>jar-with-dependencies</descriptorRef>
  						</descriptorRefs>
  						<archive>
  							<manifest>
  								<mainClass>com.example.inventory.MainApp</mainClass>
  							</manifest>
  						</archive>
  					</configuration>
  				</execution>
  			</executions>
  		</plugin>
  		
  		
  		
  		<plugin>
	  			<groupId>org.codehaus.mojo</groupId>
	  			<artifactId>build-helper-maven-plugin</artifactId>
	  			<version>3.0.0</version>
	  			<executions>
	  				<execution>
	  					<id>add-test-source</id>
	  					<phase>generate-test-sources</phase>
	  					<goals>
	  						<goal>add-test-source</goal>
	  					</goals>
	  					<configuration>
	  						<sources>
	  							<source>src/it/java</source>
	  							<source>src/e2e/java</source>
	  							<source>src/bdd/java</source>
	  						</sources>
	  					</configuration>
	  				</execution>
	  				<execution>
	  					<id>add-test-resource</id>
	  					<phase>generate-test-resources</phase>
	  					<goals>
	  						<goal>add-test-resource</goal>
	  					</goals>
	  					<configuration>
	  						<resources> 
	  							<resource>
	  								<directory>src/bdd/resources</directory>
	  							</resource>
	  						</resources>
	  					</configuration>
	  				</execution>
	  			</executions>
	  		</plugin>
	  		
	  		<plugin>
	  			<groupId>org.apache.maven.plugins</groupId>
	  			<artifactId>maven-failsafe-plugin</artifactId>
	  			<version>3.5.3</version>
	  			<configuration>
	  				<systemPropertyVariables>
	  					<mongo.port>${mongo.mapped.port}</mongo.port>
	  				</systemPropertyVariables>
	  			</configuration>
	  			<executions>
	  				<execution>
	  					<goals>
	  						<goal>integration-test</goal>
	  						<goal>verify</goal>
	  					</goals>
	  				</execution>
	  				<execution>
	  					<id>e2e-tests</id>
	  					<goals>
	  						<goal>integration-test</goal>
	  						<goal>verify</goal>
	  					</goals>
	  					<configuration>
	  						<excludes>
	  							<exclude>**/**IT.java</exclude>
	  						</excludes>
	  						<includes>
	  							<include>**/**E2E.java</include>
	  						</includes>
	  					</configuration>
	  				</execution>
	  				<execution>
	  					<id>bdd-tests</id>
	  					<goals>
	  						<goal>integration-test</goal>
	  						<goal>verify</goal>
	  					</goals>
	  					<configuration>
	  						<excludes>
	  							<exclude>**/*IT.java</exclude>
	  						</excludes>
	  						<includes>
	  							<include>**/*BDD.java</include>
	  						</includes>
	  					</configuration>
	  				</execution>
	  			</executions>
  			</plugin>
	  		
	  		<plugin>
	  			<groupId>io.fabric8</groupId>
	  			<artifactId>docker-maven-plugin</artifactId>
	  			<version>0.46.0</version>
	  			<configuration>
	  				<images>
	  					<image>
	  						<name>mongo:5</name>
	  						<run>
	  							<ports>
	  								<port>mongo.mapped.port:27017</port>
	  							</ports>
	  						</run>
	  					</image>
	  				</images>
	  			</configuration>
	  			<executions>
	  				<execution>
	  					<id>docker-start</id>
	  					<phase>pre-integration-test</phase>
	  					<goals>
	  						<goal>start</goal>
	  					</goals>
	  				</execution>
	  				<execution>
	  					<id>docker-stop</id>
	  					<phase>post-integration-test</phase>
	  					<goals>
	  						<goal>stop</goal>
	  					</goals>
	  				</execution>
	  			</executions>
	  		</plugin>
	  		
  	</plugins>
  	
  	<pluginManagement>
  		<plugins>
  		
  			<plugin>
  				<groupId>org.sonarsource.scanner.maven</groupId>
  				<artifactId>sonar-maven-plugin</artifactId>
  				<version>3.8.0.2131</version>
  			</plugin>
  			
	  		<plugin>
	  			<groupId>org.apache.maven.plugins</groupId>
	  			<artifactId>maven-surefire-report-plugin</artifactId>
	  			<version>2.22.2</version>
	  		</plugin>
	  		<plugin>
	  			<groupId>org.apache.maven.plugins</groupId>
	  			<artifactId>maven-site-plugin</artifactId>
	  			<version>3.9.1</version>
	  		</plugin>
	  		
	  		<plugin>
	  			<groupId>org.eluder.coveralls</groupId>
	  			<artifactId>coveralls-maven-plugin</artifactId>
	  			<version>4.3.0</version>
	  			<dependencies>
	  				<dependency>
	  					<groupId>javax.xml.bind</groupId>
	  					<artifactId>jaxb-api</artifactId>
	  					<version>2.3.1</version>
	  				</dependency>
	  			</dependencies>
	  		</plugin>
	  		
  		</plugins>
  	</pluginManagement>
  </build>
  
  <profiles>
  	<!-- Jacoco profile -->
  	<profile>
  		<id>jacoco</id>
  		<build>
  			<plugins>
  				<plugin>
  					<groupId>org.jacoco</groupId>
  					<artifactId>jacoco-maven-plugin</artifactId>
  				</plugin>
  			</plugins>
  		</build>
  	</profile>
  	
  	<!-- Coveralls profile-->
  	<profile>
  		<id>coveralls</id>
  		<build>
  			<plugins>
				<plugin>
					<!-- jacoco report is required by coveralls-maven-plugin -->
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<executions>
						<execution>
							<phase>verify</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
  			</plugins>
  		</build>
  	</profile>
  	
  	<profile>
  		<id>docker</id>
  		<build>
  			<plugins>
  				<plugin>
  					<groupId>io.fabric8</groupId>
  					<artifactId>docker-maven-plugin</artifactId>
  					<configuration>
  						<images>
							<image>
								<name>java-inventory-app</name>
								
								<run>
									<network>
										<mode>custom</mode>
										<name>my-network-1</name>
									</network>
									<wait>
										<log>Hello World!</log>
										<time>30000</time>
									</wait>
									<dependsOn>
										<container>mongo</container>
									</dependsOn>
									<cmd>
										<arg>mongo</arg>
									</cmd>
								</run>
							</image>
							<image>
								<name>mongo:5</name>
								<alias>mongo</alias>
								<run>
									<network>
										<mode>custom</mode>
										<name>my-network-1</name>
										<alias>mongo</alias>
									</network>
									<wait>
										<log>Waiting for connections</log>
										<time>30000</time>
									</wait>
								</run>
							</image>
  						</images>
  					</configuration>
  					<executions>
  						<execution>
  							<id>docker-build-image</id>
  							<phase>package</phase>
  							<goals>
  								<goal>build</goal>
  							</goals>
  						</execution>
  						<execution>
  							<id>docker-verify</id>
  							<phase>verify</phase>
  							<goals>
  								<goal>start</goal>
  								<goal>stop</goal>
  							</goals>
  						</execution>
  					</executions>
  				</plugin>
  			</plugins>
  		</build>
  	</profile>
  	
  	<profile>
  		<id>docker-compose</id>
  		<build>
  			<plugins>
  				<plugin>
  					<groupId>io.fabric8</groupId>
  					<artifactId>docker-maven-plugin</artifactId>
  					<configuration>
  						<images>
  							<image>
  								<alias>app</alias>
  								<external>
  									<type>compose</type>
  									<basedir>${project.basedir}</basedir>
  								</external>
  								<run>
  									<wait>
  										<log>Hello World!</log>
  										<time>10000</time>
  									</wait>
  								</run>
  							</image>
  						</images>
  					</configuration>
  				</plugin>
  			</plugins>
  		</build>
  	</profile>
  	
  	<profile>
  		<id>skip-testcontainers</id>
  		<build>
  			<plugins>
  				<plugin>
  					<groupId>org.apache.maven.plugins</groupId>
  					<artifactId>maven-failsafe-plugin</artifactId>
  					<configuration>
  						<excludes>
  							<exclude>**/*Testcontainers*.java</exclude>
						</excludes>
  					</configuration>
  				</plugin>
			</plugins>
  		</build>
  	</profile>
  </profiles>
</project>
