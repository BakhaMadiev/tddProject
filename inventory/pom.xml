<project xmlns="https://maven.apache.org/POM/4.0.0" xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>com.example</groupId>
	<artifactId>inventory</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	
	<name>Library Inventory Management</name>
	<url>http://maven.apache.org</url>
	
	<properties>
	  <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	  <maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<junit.version>4.12</junit.version>
		<assertj.version>3.27.3</assertj.version>
		<mockito.version>4.11.0</mockito.version>
		<mongo.java.driver.version>3.12.7</mongo.java.driver.version>
		<logback.classic.version>1.2.3</logback.classic.version>
		<testcontainers.version>1.21.0</testcontainers.version>
		<assertj.swing.version>3.17.1</assertj.swing.version>
		<mongo.javaserver.version>1.39.0</mongo.javaserver.version>
		<picocli.version>4.7.7</picocli.version>
		<awaitility.version>4.2.0</awaitility.version>
		<cucumber.java.version>5.5.0</cucumber.java.version>
		<pitest.version>1.5.2</pitest.version>
		<build.helper.maven.plugin.version>3.0.0</build.helper.maven.plugin.version>
		<maven.failsafe.plugin.version>3.5.3</maven.failsafe.plugin.version>
		<docker.maven.plugin.version>0.46.0</docker.maven.plugin.version>
		<sonar.maven.plugin.version>3.8.0.2131</sonar.maven.plugin.version>
		<maven.surefire.report.plugin.version>3.2.5</maven.surefire.report.plugin.version>
		<maven.site.plugin.version>3.9.1</maven.site.plugin.version>
		<coveralls.manev.plugin.version>4.3.0</coveralls.manev.plugin.version>
		<jacoco.maven.plugin.version>0.8.11</jacoco.maven.plugin.version>
		
		<sonar.issue.ignore.multicriteria>e21,e22,e23,e24,e25,e26,e27</sonar.issue.ignore.multicriteria>
		
		<!--Test classes should comply with a naming convention-->
		<sonar.issue.ignore.multicriteria.e21.ruleKey>java:S3577</sonar.issue.ignore.multicriteria.e21.ruleKey>
		<sonar.issue.ignore.multicriteria.e21.resourceKey>**/LibrarySwingAppE2E.java</sonar.issue.ignore.multicriteria.e21.resourceKey>
		
		<!--Call to Mockito method "verify", "when" or "given" should be simplified-->
		<sonar.issue.ignore.multicriteria.e22.ruleKey>java:S6068</sonar.issue.ignore.multicriteria.e22.ruleKey>
		<sonar.issue.ignore.multicriteria.e22.resourceKey>**/*ControllerIT.java</sonar.issue.ignore.multicriteria.e22.resourceKey>
		
		<!--Field names should comply with a naming convention-->
		<sonar.issue.ignore.multicriteria.e23.ruleKey>java:S116</sonar.issue.ignore.multicriteria.e23.ruleKey>
		<sonar.issue.ignore.multicriteria.e23.resourceKey>**/LibrarySwingView.java</sonar.issue.ignore.multicriteria.e23.resourceKey>
		
		<!--"static" base class members should not be accessed via derived types (The generated code by windowBuilder-->
		<sonar.issue.ignore.multicriteria.e24.ruleKey>java:S3252</sonar.issue.ignore.multicriteria.e24.ruleKey>
		<sonar.issue.ignore.multicriteria.e24.resourceKey>**/LibrarySwingView.java</sonar.issue.ignore.multicriteria.e24.resourceKey>
		
		<!--Local variable and method parameter names should comply with a naming convention-->
		<sonar.issue.ignore.multicriteria.e25.ruleKey>java:S117</sonar.issue.ignore.multicriteria.e25.ruleKey>
		<sonar.issue.ignore.multicriteria.e25.resourceKey>**/LibrarySwingView.java</sonar.issue.ignore.multicriteria.e25.resourceKey>
		
		<!--Tests should include assertions-->
		<sonar.issue.ignore.multicriteria.e26.ruleKey>java:S2699</sonar.issue.ignore.multicriteria.e26.ruleKey>
		<sonar.issue.ignore.multicriteria.e26.resourceKey>**/LibrarySwingViewTest.java</sonar.issue.ignore.multicriteria.e26.resourceKey>
		
		<!--Similar tests should be grouped in a single Parameterized test-->
		<sonar.issue.ignore.multicriteria.e27.ruleKey>java:S5976</sonar.issue.ignore.multicriteria.e27.ruleKey>
		<sonar.issue.ignore.multicriteria.e27.resourceKey>**/LibrarySwingViewTest.java</sonar.issue.ignore.multicriteria.e27.resourceKey>
		
		<sonar.coverage.exclusions>**/model/*.java, **/MainApp.java</sonar.coverage.exclusions>
		<sonar.junit.reportPaths>
			${project.build.directory}/surefire-reports,
			${project.build.directory}/failsafe-reports
		</sonar.junit.reportPaths>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
			<scope>test</scope>
		</dependency>
	
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
	
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongo.java.driver.version}</version>
		</dependency>
	
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.classic.version}</version>
		</dependency>
	
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
	
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mongodb</artifactId>
			<version>${testcontainers.version}</version>
		</dependency>
	
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>${assertj.swing.version}</version>
			<scope>test</scope>
		</dependency>
	
	  	<dependency>
			<groupId>de.bwaldvogel</groupId>
			<artifactId>mongo-java-server</artifactId>
			<version>${mongo.javaserver.version}</version>
		</dependency>
	
		<dependency>
			<groupId>info.picocli</groupId>
			<artifactId>picocli</artifactId>
			<version>${picocli.version}</version>
		</dependency>
	
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>${awaitility.version}</version>
			<scope>test</scope>
		</dependency>
	
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>${cucumber.java.version}</version>
			<scope>test</scope>
		</dependency>
	
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>${cucumber.java.version}</version>
			<scope>test</scope>
		</dependency>
	
	</dependencies>

<build>
	<plugins>
		<plugin>
			<groupId>org.pitest</groupId>
			<artifactId>pitest-maven</artifactId>
			<version>${pitest.version}</version>
			<configuration>
				<targetClasses>
					<param>com.example.inventory.controller.*</param>
				</targetClasses>
				<targetTests>
					<param>com.example.inventory.controller.*Test</param>
				</targetTests>
				<excludedClasses>
					<param>com.example.inventory.model.*</param>
					<param>com.example.inventory.MainApp*</param>
				</excludedClasses>
				<mutators>
					<mutator>STRONGER</mutator>
				</mutators>
			</configuration>
		</plugin>
		
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>exec-maven-plugin</artifactId>
			<version>3.1.0</version>
			<configuration>
				<mainClass>com.example.inventory.MainApp</mainClass>
			</configuration>
		</plugin>
		
		<!--JaCoCo configuration-->
		
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-assembly-plugin</artifactId>
			<executions>
				<execution>
					<phase>package</phase>
					<goals>
						<goal>single</goal>
					</goals>
					<configuration>
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
						</descriptorRefs>
						<archive>
							<manifest>
								<mainClass>com.example.inventory.MainApp</mainClass>
							</manifest>
						</archive>
					</configuration>
				</execution>
			</executions>
		</plugin>

		<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${build.helper.maven.plugin.version}</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
								<source>src/e2e/java</source>
								<source>src/bdd/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-resource</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources> 
								<resource>
									<directory>src/bdd/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven.failsafe.plugin.version}</version>
				<configuration>
					<systemPropertyVariables>
						<mongo.port>${mongo.mapped.port}</mongo.port>
					</systemPropertyVariables>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
					<execution>
						<id>e2e-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/**IT.java</exclude>
							</excludes>
							<includes>
								<include>**/**E2E.java</include>
							</includes>
						</configuration>
					</execution>
					<execution>
						<id>bdd-tests</id>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/*IT.java</exclude>
							</excludes>
							<includes>
								<include>**/*BDD.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.maven.plugin.version}</version>
				<configuration>
					<images>
						<image>
							<name>mongo:5</name>
							<run>
								<ports>
									<port>mongo.mapped.port:27017</port>
								</ports>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker-start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>docker-stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
	</plugins>

		<pluginManagement>
			<plugins>
				
				 <plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar.maven.plugin.version}</version>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven.surefire.report.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven.site.plugin.version}</version>
				</plugin>
				
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>${coveralls.manev.plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>javax.xml.bind</groupId>
							<artifactId>jaxb-api</artifactId>
							<version>2.3.1</version>
						</dependency>
					</dependencies>
				</plugin>
				
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
	<!-- Jacoco profile -->
		<profile>
			<id>jacoco</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${jacoco.maven.plugin.version}</version>
						<configuration>
							<excludes>
								<exclude>**/MainApp.*</exclude>
								<exclude>**/Book.*</exclude>
								<exclude>**/Author.*</exclude>
							</excludes>
						</configuration>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	
		<!-- Coveralls profile-->
		<profile>
			<id>coveralls</id>
			<build>
				<plugins>
					<plugin>
						<!-- jacoco report is required by coveralls-maven-plugin -->
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.eluder.coveralls</groupId>
						<artifactId>coveralls-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<!--Mutation testing profile-->
		<profile>
			<id>mutation-testing-report</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<version>${pitest.version}</version>
						<configuration>
							<targetClasses>
								<param>com.example.inventory.controller.*</param>
							</targetClasses>
							<targetTests>
								<param>com.example.inventory.controller.*Test</param>
							</targetTests>
							<excludedClasses>
								<param>com.example.inventory.model.*</param>
								<param>com.example.inventory.MainApp*</param>
							</excludedClasses>
							<mutators>
								<mutator>STRONGER</mutator>
							</mutators>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-report-plugin</artifactId>
						<version>${maven.surefire.report.plugin.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>report-only</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
