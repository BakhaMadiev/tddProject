name: Java CI with Maven in Linux

on:
  push:
     branches: [ master ]
  pull_request:
     branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        java: [8, 11, 17, 21]
        os: [ubuntu-latest, windows-latest, macos-latest]
        exclude:
        - java: 8
          os: macos-latest

    runs-on: ${{ matrix.os }}
    
    env:
       workdir: inventory
       
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml', '**/*.yml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Build with Maven
        shell: bash
        env:
           COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
        run: |
           EXTRA_ARGS=""
           if [[ "${{ matrix.os }}" == "ubuntu-latest" && "${{ matrix.java }}" == "8" ]]; then
              EXTRA_ARGS="-Pdocker -Pcoveralls -DrepoToken=$COVERALLS_REPO_TOKEN coveralls:report -DpullRequest=${{ github.event.pull_request.number }}"
           fi
           mvn verify $EXTRA_ARGS
        working-directory: ${{ env.workdir }}
        
      - name: Generate JUnit Report
        run: mvn surefire-report:report-only site:site -DgenerateReports=false
        working-directory: ${{ env.workdir }}
        
      - name: Archive JUnit Reports
        uses: actions/upload-artifact@v4
        with:
           name: surefire-report-jdk-${{ matrix.java }}-${{ matrix.os }}
           path: '**/target/site'